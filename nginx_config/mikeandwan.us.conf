# http -> https and force to fqdn
server {
    listen [::]:80;
    listen 80;

    server_name mikeandwan.us www.mikeandwan.us;

    return 301 https://www.mikeandwan.us$request_uri;
}

# canonical redirect
server {
    listen [::]:443 ssl spdy;
    listen 443 ssl spdy;

    server_name mikeandwan.us;

    ##############################################################################
    # SSL - https://mozilla.github.io/server-side-tls/ssl-config-generator/
    #     - https://github.com/h5bp/server-configs-nginx/tree/master/h5bp/directive-only
    ##############################################################################
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/nginx/certs/mikeandwan.us.bundle.pem;
    ssl_certificate_key /etc/nginx/certs/mikeandwan.us.key;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:20m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/nginx/certs/mikeandwan.us.dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/nginx/certs/thawte.bundle.pem;

    resolver 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout 2s;
    ##############################################################################
    # SSL - END
    ##############################################################################

    return 301 https://www.mikeandwan.us$request_uri;
}


server {
    listen [::]:443 ssl spdy deferred;
    listen 443 ssl spdy deferred;
 
    server_name www.mikeandwan.us;
    server_tokens off;

    root /srv/www/mikeandwan.us/wwwroot;

    underscores_in_headers on;

    access_log /var/log/nginx/mikeandwan.us.access_log main;
    error_log /var/log/nginx/mikeandwan.us.error_log;

    # HSTS (ngx_http_headers_module is required) (31536000 seconds = 12 months)
    add_header Strict-Transport-Security max-age=31536000;
    add_header X-Frame-Options DENY;
    add_header X-UA-Compatible IE=Edge;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Alternate-Protocol 443:npn-spdy/3;

    spdy_headers_comp 6;

    gzip on;
    gzip_comp_level 5;
    gzip_proxied any;
    gzip_vary  on;
    gzip_types
    	application/atom+xml
    	application/javascript
   	application/json
    	application/ld+json
    	application/manifest+json
    	application/rdf+xml
    	application/rss+xml
    	application/schema+json
    	application/vnd.geo+json
    	application/vnd.ms-fontobject
    	application/x-font-ttf
    	application/x-javascript
    	application/x-web-app-manifest+json
    	application/xhtml+xml
    	application/xml
    	font/eot
    	font/opentype
    	image/bmp
    	image/svg+xml
    	image/vnd.microsoft.icon
    	image/x-icon
    	text/cache-manifest
    	text/css
    	text/javascript
    	text/plain
    	text/vcard
    	text/vnd.rim.location.xloc
    	text/vtt
    	text/x-component
    	text/x-cross-domain-policy
    	text/xml;
  	# text/html is always compressed by HttpGzipModule
    
    ##############################################################################
    # SSL - https://mozilla.github.io/server-side-tls/ssl-config-generator/
    #     - https://github.com/h5bp/server-configs-nginx/tree/master/h5bp/directive-only 
    ##############################################################################
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/nginx/certs/mikeandwan.us.bundle.pem;
    ssl_certificate_key /etc/nginx/certs/mikeandwan.us.key;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:20m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/nginx/certs/mikeandwan.us.dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/nginx/certs/thawte.bundle.pem;

    resolver 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout 2s;
    ##############################################################################
    # SSL - END
    ##############################################################################

    open_file_cache          max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    location / {
        proxy_pass http://127.0.0.1:5004;

        proxy_buffers 8 24k;
        proxy_buffer_size 2k;
        proxy_http_version 1.1;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location ~* /(images|movies|swf)/ {
        root /srv/www/website_assets;
        expires 1d;
        access_log off;
    }

    # for the below entries under wwwroot - we could potentially save some config
    # if we used the 'try_files' feature of nginx.  however, separating these out
    # specifically allow us more control over customized headers - in particular
    # cache expiration - which we want to be very long
    location ~* /(css|js|img)/ {
        expires 1y;
        access_log off;
    }
}

