user  nginx;
worker_processes  auto;
worker_rlimit_nofile 8192;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    client_body_timeout   10;
    client_max_body_size  10m;
    client_body_buffer_size 128k;
    client_header_timeout 10;
    keepalive_timeout     29;
    #limit_req_zone        $binary_remote_addr zone=one:10m rate=5r/s;
    sendfile              on;
    send_timeout          10;
    server_tokens         off;
    tcp_nodelay           on;
    tcp_nopush            on;
    types_hash_max_size   4096;

    gzip            on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied    any;
    gzip_vary       on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/schema+json
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/eot
        font/opentype
        image/bmp
        image/svg+xml
        image/vnd.microsoft.icon
        image/x-icon
        text/cache-manifest
        text/css
        text/javascript
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy
        text/xml;
        # text/html is always compressed by HttpGzipModule

    include             /etc/nginx/proxy.conf;
    include             /etc/nginx/mime.types;

    charset             utf-8;
    default_type        application/octet-stream;

    upstream api_servers {
        server api:5011;
    }

    upstream auth_servers {
        server auth:5001;
    }

    upstream www_servers {
        server www:5021;
    }

    # full ssl options only seem to be allowed the first time they are defined, so do this here
    # so the actual sites will inherit this, and simplify their listen options
    server {
        listen [::]:443 ssl http2 deferred;
        listen 443 ssl http2 deferred;
    }

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
}
