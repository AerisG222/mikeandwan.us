@{
    ViewBag.Title = "Angular2 Overview";
    Layout = "_LayoutMinimal";
}

@section custom_head {
    @Html.Partial("_css_Reveal")
}

<div class="reveal">
    <div class="slides">

        <section>
            <h1>Angular2</h1>
            <h2>Overview and Walkthrough</p>

            <h3 style="margin-top: 64px">December 16, 2015</h3>

            <p>Disclaimer: this content is stale, and will not be updated.</p>
        </section>

        <section>
            <h3>It's (still) an awesome time to be a Web Developer!</h3>
        </section>

        <section>
            <h2>Topics</h2>
            <ul>
                <li class="fragment">Angular2 Goals</li>
                <li class="fragment">Fundamental Changes</li>
                <li class="fragment">Getting Started</li>
                <li class="fragment">Examples
                    <ul>
                        <li>Host Page</li>
                        <li>Templates</li>
                        <li>Bootstrap</li>
                        <li>Services</li>
                        <li>Components</li>
                    </ul>
                </li>
                <li class="fragment">Deployment</li>
                <li class="fragment">Release Schedule</li>
                <li class="fragment">Resources</li>
                <li class="fragment">Q/A</li>
            </ul>
        </section>

        <section>
            <h2>Angular2 Goals</h2>
            <ul>
                <li>Performance</li>
                <li>Reduced learning curve / easier to reason about</li>
                <li>Future & Standards Focused</li>
                <li>No DOM dependency</li>
                <li>Upgrade support</li>
                <li>Improved error messaging</li>
            </ul>
        </section>

        <section>
            <h2>Fundamental Changes</h2>
            <ul>
                <li>Total Rewrite in Typescript</li>
                <li>Directives/Controllers => Components</li>
                <li>No more services/values/constants/factories</li>
                <li>Filters => Pipes</li>
                <li>Promises => Observables (via RxJS)</li>
                <li>No ng-app => bootstrap with System.js</li>
                <li>No $scope or digest cycles => zone.js</li>
                <li>Dependency Injection (via constructors)</li>
                <li>Updated Router</li>
            </ul>
        </section>

        <section>
            <h2>Getting Started</h2>
            <ul>
                <li>Install Node.js</li>
                <li>Install VS Code</li>
                <li>Create directory for project</li>
                <li>Create and populate package.json</li>
                <li>npm install</li>
                <li>VSCode will find typings in node_modules</li>
                <li>Have fun!</li>
            </ul>
        </section>

        <section>
            <section>
                <h2>Host Page</h2>

                <ul>
                    <li>Specify base location</li>
                    <li>Include and configure System.js</li>
                    <li>Include Angular scripts</li>
                    <li>Place application element</li>
                    <li>Use System.js to load app</li>
                </ul>
            </section>

            <section>
                <pre><code>
&lt;head&gt;
&lt;base href="/myApp/" /&gt;
&lt;script src="/js/libs/system.js"&gt;&lt;/script&gt;
&lt;script&gt;
    System.config({
        defaultJSExtensions: true
    });
&lt;/script&gt;
&lt;script src="/js/libs/es6-shim/es6-shim.min.js"&gt;&lt;/script&gt;
&lt;script src="/js/libs/rxjs/Rx.min.js"&gt;&lt;/script&gt;
&lt;script src="/js/libs/angular2/angular2-polyfills.min.js"&gt;&lt;/script&gt;
&lt;script src="/js/libs/angular2/angular2.min.js"&gt;&lt;/script&gt;
&lt;script src="/js/libs/angular2/http.min.js"&gt;&lt;/script&gt;
&lt;script src="/js/libs/angular2/router.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;myApp&gt;Loading...&lt;/myApp&gt;

&lt;script&gt;System.import('/js/myApp/bootstrap');&lt;/script&gt;
                </code></pre>
            </section>
        </section>

        <section>
            <section>
                <h2>Templates</h2>
                <ul>
                    <li>Bind to properties not attributes</li>
                    <li>Allows for binding to custom / future properties</li>
                    <li>Removes need for many Angular1 directives</li>
                </ul>
            </section>
            <section>
                <h3>Content Display</h3>

                <pre><code>
&lt;span&gt;{{name}}&lt;/span&gt;
                </code></pre>
            </section>
            <section>
                <h3>Pipes</h3>

                <pre><code>
&lt;span&gt;{{aum | aumFormat}}&lt;/span&gt;
                </code></pre>
            </section>
            <section>
                <h3>Property Binding</h3>

                <pre><code>
&lt;el [prop]="expression" /&gt;
                </code></pre>
            </section>
            <section>
                <h3>Event Binding</h3>

                <pre><code>
&lt;el (click)="onClick()" /&gt;

&lt;el (myEvent)="onMyEvent($event)" /&gt;
                </code></pre>
            </section>
            <section>
                <h3>Two Way Binding</h3>

                <pre><code>
&lt;input type="text" [(ngModel)]="myVal" /&gt;
                </code></pre>
            </section>
            <section>
                <h3>Local Variables</h3>

                <pre><code>
&lt;input #cmp type="text" /&gt;

&lt;button (click)="doSomething(#cmp.value)"&gt;Submit&lt;/button&gt;
                </code></pre>
            </section>
            <section>
                <h3>Repeater</h3>

                <pre><code>
&lt;div *ngFor="#item of items">
    {{item.name}}
&lt;/div&gt;
                </code></pre>
            </section>
        </section>

        <section>
            <h2>Bootstrap</h2>

            <pre><code>
import { bootstrap } from 'angular2/platform/browser';
import { provide } from 'angular2/core';
import { ROUTER_PROVIDERS, LocationStrategy, HashLocationStrategy } from 'angular2/router';
import { MyApp } from './components/MyApp';
import { MyService } from './services/MyService';

bootstrap(MyApp, [
    MyService,
    ROUTER_PROVIDERS,
    provide(LocationStrategy, {useClass: HashLocationStrategy})
])
.catch(err => console.error(err));
            </pre></code>
        </section>

        <section>
            <h2>Services</h2>

            <pre><code>
import { Injectable, EventEmitter } from 'angular2/core';

@@Injectable()
export class MyService {
    myEventEmitter = new EventEmitter&lt;any&gt;();

    constructor(private _otherService : OtherService) { }

    doSomething(val : string) : void {
        this.myEventEmitter.next(val);
    }
}
            </code></pre>
        </section>

        <section>
            <h2>Components</h2>

            <pre><code>
import { Component, Input, Output, EventEmitter } from 'angular2/core';
import { NgIf } from 'angular2/common';
import { MyDataService } from '../services/MyDataService';

@@Component({
    selector: 'myApp',
    directives: [ NgIf ],
    templateUrl: '/js/myApp/components/MyApp.html'
})
export class MyApp {
    private _val : string;
    @@Output() myEventEmitter = new EventEmitter&lt;any&gt;();

    @@Input() set myValue(value : string) {
        this._val = value;
    }

    get myValue() : string {
        return this._val;
    }

    constructor(private _dataService : MyDataService) {

    }
    ...
}
            </code></pre>
        </section>

        <section>
            <h2>Deployment</h2>
            <ul>
                <li>Transpile code to ES5
                    <ul>
                        <li>Gulp JS + gulp-typescript</li>
                        <li>Define custom build task to build application</li>
                        <li>npm run gulp -- myApp</li>
                    </ul>
                </li>
                <li>Bundling + Minification?</li>
                <li>Angular CLI?</li>
                <li>Server side support? (<a href="https://channel9.msdn.com/Events/ASPNET-Events/ASPNET-Fall-Sessions/ASPNET--Spa">Channel 9 Talk</a>)</li>
            </ul>
        </section>

        <section>
            <h2>Release Schedule</h2>
            <ul>
                <li>Beta 0 released <strong>*yesterday*</strong></li>
            </ul>
        </section>

        <section>
            <h2>Resources</h2>
            <ul>
                <li><a href="https://angular.io">angular.io</a>
                    <ul>
                        <li><a href="https://angular.io/docs/ts/latest/guide/cheatsheet.html">Cheat Sheet</a></li>
                        <li><a href="https://angular.io/docs/ts/latest/api/">API Docs</a></li>
                    </ul>
                </li>
                <li><a href="http://angularconnect.com/">Angular Connect</a></li>
                <li><a href="https://github.com/angular/angular/">Github Repo</a></li>
                <li><a href="http://blog.thoughtram.io/categories/angular-2/">thoughtram Blog</a></li>
                <li><a href="http://victorsavkin.com/">Victor Savkin blog</a></li>
                <li><a href="http://reactivex.io/">ReactiveX</a></li>
                <li><a href="https://nodejs.org/en/">Node.js</a></li>
                <li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li>
            </ul>
        </section>

        <section>
            <h2>Questions?</h2>
            <h2>Answers?</h2>
        </section>
    </div>
</div>

@Html.Partial("_js_Reveal")
<script>
    document.addEventListener('DOMContentLoaded', function(event) {
        // Full list of configuration options available at:
        // https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            parallaxBackgroundImage: '/img/presentation/slide_bg.jpg',
            parallaxBackgroundSize: '4284px 2844px'
        });
    });
</script>

