{"version":3,"file":"cube.js","sourceRoot":"","sources":["home/mmorano/git/mikeandwan.us/client_apps/webgl_cube/cube.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"./typings/browser.d.ts\" />\n\njQuery(function() {\n    let demo = new CubeDemo();\n    demo.run();\n});\n\nclass CubeDemo {\n    scene: THREE.Scene;\n    camera: THREE.PerspectiveCamera;\n    renderer: THREE.Renderer;\n    cube: THREE.Mesh;\n    ambientLight: THREE.AmbientLight;\n    stats: Stats;\n\n    run() {\n        this.prepareScene();\n        this.render();\n    }\n\n    prepareScene() {\n        // this.scene\n        this.scene = new THREE.Scene();\n\n        // fog\n        this.scene.fog = new THREE.Fog(0x9999ff, 400, 1000);\n\n        // renderer\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        document.body.appendChild(this.renderer.domElement);\n\n        // stats\n        this.stats = new Stats();\n        this.stats.domElement.style.position = 'absolute';\n        this.stats.domElement.style.top = '0px';\n        document.body.appendChild(this.stats.domElement);\n\n        // camera\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n        this.camera.position.set(0, 150, 400);\n        this.camera.lookAt(this.scene.position);\n\n        // ambient light\n        this.ambientLight = new THREE.AmbientLight(0x404040);\n        this.scene.add(this.ambientLight);\n\n        // directional light\n        let directionalLight = new THREE.DirectionalLight(0xffffff, 0.9);\n        directionalLight.position.set(-1, 1, 1);\n        directionalLight.castShadow = true;\n        this.scene.add(directionalLight);\n\n        // axis helper\n        let axisHelper = new THREE.AxisHelper(100);\n        this.scene.add(axisHelper);\n\n        // cube\n        let texture = THREE.ImageUtils.loadTexture('/images/2013/alyssas_first_snowman/thumbnails/DSC_9960.jpg');\n        let geometry = new THREE.BoxGeometry(50, 50, 50);\n        let material = new THREE.MeshPhongMaterial({ color: 0xffffff, map: texture });\n        this.cube = new THREE.Mesh(geometry, material);\n        this.cube.position.set(0, 70, 180);\n        this.scene.add(this.cube);\n\n        // floor\n        let floorPlane = new THREE.PlaneGeometry(1000, 1000);\n        let floorTexture = THREE.ImageUtils.loadTexture('/img/photos3d/floor.jpg');\n        floorTexture.wrapS = THREE.RepeatWrapping;\n        floorTexture.wrapT = THREE.RepeatWrapping;\n        floorTexture.repeat.set(9, 9);\n        let floorMaterial = new THREE.MeshBasicMaterial({ map: floorTexture, side: THREE.DoubleSide }); //\n        let floor = new THREE.Mesh(floorPlane, floorMaterial);\n        floor.position.y = -30;\n        floor.rotation.x = (Math.PI / 2) - .3;\n        this.scene.add(floor);\n    }\n\n    render() {\n        requestAnimationFrame(() => this.render());\n\n        this.cube.rotation.x += 0.01;\n        this.cube.rotation.y += 0.01;\n\n        this.renderer.render(this.scene, this.camera);\n\n        this.stats.update();\n    }\n}\n"]}