# https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.1
# https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/Dockerfile.alpine-x64
FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine-amd64 AS build



RUN apk --no-cache add \
    bash \
    findutils \
    g++ \
    make \
    nodejs \
    openssl \
    rsync \
    sed

# arrgh!
# https://docs.duendesoftware.com/identityserver/v7/overview/security/#package-signing
# https://github.com/DuendeSoftware/Support/issues/1352
# once resolved - also remove openssl above
RUN wget http://crt.sectigo.com/SectigoPublicCodeSigningRootR46.p7c -O sectigo.p7c && \
    openssl pkcs7 -inform DER -outform PEM -in sectigo.p7c -print_certs -out sectigo.pem && \
    [[ "$(openssl x509 -in sectigo.pem -fingerprint -sha1 -noout)" = 'sha1 Fingerprint=CC:BB:F9:E1:48:5A:F6:3C:E4:7A:BF:8E:9E:64:8C:25:04:FC:31:9D' ]] && \
    cat sectigo.pem >> /usr/share/dotnet/sdk/8.0.303/trustedroots/codesignctl.pem && \
    rm -v sectigo.p7c sectigo.pem

RUN wget -qO- https://get.pnpm.io/install.sh | ENV="$HOME/.shrc" SHELL="$(which sh)" sh -

RUN sh -c 'source /root/.shrc && pnpm install -g clean-css-cli uglify-js'

WORKDIR /src

COPY _client_app_vars.sh   .
COPY _build.sh             .
COPY build_client_apps.sh  .
COPY mikeandwan.us.sln     .
COPY nuget.config          .
COPY src/.                 src/
COPY tests/.               tests/

RUN sh -c 'source /root/.shrc && ./_build.sh auth'


# build runtime image
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine-amd64

RUN apk --no-cache add \
    bash \
    ca-certificates \
    file

WORKDIR /maw-auth

COPY --from=build /src/dist .
COPY _start_site_in_container.sh /usr/local/bin/

EXPOSE 5001

# TODO: cant specify user yet given how we currently deal with certificates as it tries to write to filesystem:
# cp: can't create '/usr/local/share/ca-certificates/ca_2022-05-12.crt': Permission denied
#USER app

ENTRYPOINT [ "_start_site_in_container.sh" ]
CMD [ "./MawAuth" ]
