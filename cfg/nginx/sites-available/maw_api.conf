# http -> https and force to fqdn
server {
    listen [::]:80;
    listen 80;

    server_name api.mikeandwan.us;

    return 301 https://api.mikeandwan.us$request_uri;
}

upstream api_mikeandwan_us {
    server 127.0.0.1:5011;
}

server {
    listen [::]:443;
    listen 443;

    server_name api.mikeandwan.us;

    root /srv/www/maw_api/wwwroot;

    access_log /var/log/nginx/maw_api.access_log main;
    error_log /var/log/nginx/maw_api.error_log;

    include /etc/nginx/shared.conf;
    include /etc/nginx/tls.conf;

    # ssl certs come from lets encrypt / certbot that is managed on the host
    ssl_certificate         /etc/letsencrypt/live/api.mikeandwan.us/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/api.mikeandwan.us/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.mikeandwan.us/chain.pem;

    location /uploadr {
        proxy_http_version 1.1;

        proxy_pass https://api_mikeandwan_us;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location / {
        proxy_pass https://api_mikeandwan_us;
    }

    location /upload/upload {
        # https://gist.github.com/pauloricardomg/7084524
        if ($http_origin ~* (https://.*\.mikeandwan\.us$)) {
            set $cors "1";
        }

        # OPTIONS indicates a CORS pre-flight request
        if ($request_method = 'OPTIONS') {
            set $cors "${cors}o";
        }

        # Append CORS headers to any request from
        # allowed CORS domain, except OPTIONS
        if ($cors = "1") {
            #add_header Access-Control-Allow-Origin $http_origin;
            #add_header Access-Control-Allow-Credentials true;
            proxy_pass https://api_mikeandwan_us;
        }

        # OPTIONS (pre-flight) request from allowed
        # CORS domain. return response directly
        if ($cors = "1o") {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers 'Authorization,Origin,Content-Type,Accept';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        client_max_body_size 2g;
    }
}
